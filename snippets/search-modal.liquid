{% comment %}
  Search Modal
  Accessible search overlay for desktop
{% endcomment %}

<div class="search-modal" id="search-modal" role="dialog" aria-modal="true" aria-label="{{ 'general.search.search' | t }}">
  <div class="search-modal__content">
    <div class="search-modal__header">
      <h2 class="search-modal__title">{{ 'general.search.search' | t }}</h2>
      <button class="search-modal__close" aria-label="{{ 'general.accessibility.close' | t }}">
        {% render 'icon-close' %}
      </button>
    </div>
    
    <div class="search-modal__body">
      <form class="search-modal__form" action="{{ routes.search_url }}" method="get" role="search">
        <div class="search-modal__input-wrapper">
          <input type="search" 
                 name="q" 
                 value="{{ search.terms | escape }}"
                 placeholder="{{ 'general.search.placeholder' | t }}"
                 class="search-modal__input"
                 autocomplete="off"
                 autocorrect="off"
                 autocapitalize="off"
                 spellcheck="false">
          <button type="submit" class="search-modal__submit" aria-label="{{ 'general.search.submit' | t }}">
            {% render 'icon-search' %}
          </button>
        </div>
      </form>
      
      {% comment %} Predictive search results can be added here {% endcomment %}
      <div class="search-modal__results" id="search-results"></div>
    </div>
  </div>
</div>

<style>
  /* Search Modal */
  .search-modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(var(--color-foreground), 0.5);
    backdrop-filter: blur(4px);
    z-index: 20;
    display: flex;
    align-items: flex-start;
    justify-content: center;
    padding: 5rem 2rem;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .search-modal--open {
    opacity: 1;
    visibility: visible;
  }
  
  .search-modal__content {
    background: rgb(var(--color-background));
    border-radius: 1.2rem;
    box-shadow: 0 2rem 6rem rgba(var(--color-foreground), 0.2);
    width: 100%;
    max-width: 60rem;
    max-height: 80vh;
    overflow: hidden;
    transform: translateY(-2rem);
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .search-modal--open .search-modal__content {
    transform: translateY(0);
  }
  
  .search-modal__header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 2rem;
    border-bottom: 0.1rem solid rgba(var(--color-foreground), 0.08);
  }
  
  .search-modal__title {
    font-size: 2rem;
    font-weight: 600;
    margin: 0;
    color: rgb(var(--color-foreground));
  }
  
  .search-modal__close {
    background: none;
    border: none;
    padding: 0.8rem;
    margin-right: -0.8rem;
    cursor: pointer;
    color: rgb(var(--color-foreground));
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 0.4rem;
    transition: background-color 0.2s ease;
  }
  
  .search-modal__close:hover {
    background: rgba(var(--color-foreground), 0.05);
  }
  
  .search-modal__body {
    padding: 2rem;
  }
  
  .search-modal__form {
    margin-bottom: 2rem;
  }
  
  .search-modal__input-wrapper {
    position: relative;
    display: flex;
    align-items: center;
    background: rgba(var(--color-foreground), 0.05);
    border: 0.2rem solid transparent;
    border-radius: 0.8rem;
    overflow: hidden;
    transition: border-color 0.2s ease;
  }
  
  .search-modal__input-wrapper:focus-within {
    border-color: rgb(var(--color-button));
  }
  
  .search-modal__input {
    flex: 1;
    padding: 1.6rem 2rem;
    background: none;
    border: none;
    font-size: 1.6rem;
    color: rgb(var(--color-foreground));
    outline: none;
  }
  
  .search-modal__input::placeholder {
    color: rgba(var(--color-foreground), 0.6);
  }
  
  .search-modal__submit {
    background: rgb(var(--color-button));
    color: rgb(var(--color-button-text));
    border: none;
    padding: 1.6rem 2rem;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background-color 0.2s ease;
  }
  
  .search-modal__submit:hover {
    background: rgba(var(--color-button), 0.9);
  }
  
  .search-modal__results {
    min-height: 10rem;
  }
  
  /* Mobile adjustments */
  @media screen and (max-width: 589px) {
    .search-modal {
      padding: 2rem 1rem;
    }
    
    .search-modal__content {
      border-radius: 0.8rem;
    }
    
    .search-modal__header,
    .search-modal__body {
      padding: 1.5rem;
    }
    
    .search-modal__title {
      font-size: 1.8rem;
    }
    
    .search-modal__input {
      font-size: 1.6rem;
      padding: 1.4rem 1.5rem;
    }
    
    .search-modal__submit {
      padding: 1.4rem 1.5rem;
    }
  }
  
  /* High contrast support */
  @media (prefers-contrast: high) {
    .search-modal__content {
      box-shadow: 0 2rem 6rem rgba(var(--color-foreground), 0.4);
    }
    
    .search-modal__header {
      border-bottom-width: 0.2rem;
    }
    
    .search-modal__input-wrapper {
      border-width: 0.2rem;
    }
  }
  
  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .search-modal,
    .search-modal__content,
    .search-modal__close,
    .search-modal__input-wrapper,
    .search-modal__submit {
      transition: none;
    }
  }
</style>